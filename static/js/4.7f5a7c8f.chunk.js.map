{"version":3,"sources":["components/User/UserStatsGraphs.module.css","components/User/UserStatsGraphs.js"],"names":["module","exports","UserStatsGraphs","data","useState","graph","setGraph","total","setTotal","useEffect","graphData","map","item","x","title","y","Number","acessos","reduce","a","b","className","styles","graphItem","innerRadius","padding","top","bottom","left","right","style","fillOpacity","stroke","strokeWidth","labels","fontSize","fill","alignment"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,MAAQ,+BAA+B,UAAY,mCAAmC,MAAQ,iC,sJCGjG,SAASC,EAAT,GAAoC,IAATC,EAAQ,EAARA,KAAQ,EACtBC,mBAAS,IADa,mBACzCC,EADyC,KAClCC,EADkC,OAEtBF,mBAAS,GAFa,mBAEzCG,EAFyC,KAElCC,EAFkC,KAkBhD,OAdAC,qBAAU,WACR,GAAIN,EAAM,CACR,IAAMO,EAAYP,EAAKQ,KAAI,SAAAC,GACzB,MAAO,CACLC,EAAGD,EAAKE,MACRC,EAAGC,OAAOJ,EAAKK,aAInBT,EAASL,EAAKQ,KAAI,gBAAGM,EAAH,EAAGA,QAAH,OAAiBD,OAAOC,MAAUC,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,MACzEd,EAASI,MAEV,CAACP,IAGF,0BAASkB,UAAS,UAAKC,IAAOjB,MAAZ,cAAlB,UACE,qBAAKgB,UAAS,UAAKC,IAAOf,MAAZ,YAAqBe,IAAOC,WAA1C,SACE,0CAAahB,OAEf,qBAAKc,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,CACEpB,KAAME,EACNmB,YAAa,GACbC,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDC,MAAO,CACL3B,KAAM,CACJ4B,YAAa,GACbC,OAAQ,OACRC,YAAa,GAEfC,OAAQ,CACNC,SAAU,GACVC,KAAM,aAKd,qBAAKf,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYc,UAAU,QAAQlC,KAAME","file":"static/js/4.7f5a7c8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"UserStatsGraphs_graph__1FRU0\",\"graphItem\":\"UserStatsGraphs_graphItem__HoVZ0\",\"total\":\"UserStatsGraphs_total__2o7GJ\"};","import React, { useState, useEffect } from 'react'\r\nimport styles from './UserStatsGraphs.module.css'\r\nimport { VictoryPie, VictoryChart, VictoryBar } from 'victory'\r\n\r\nexport default function UserStatsGraphs({ data }) {\r\n  const [graph, setGraph] = useState([])\r\n  const [total, setTotal] = useState(0)\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const graphData = data.map(item => {\r\n        return {\r\n          x: item.title,\r\n          y: Number(item.acessos)\r\n        }\r\n      })\r\n\r\n      setTotal(data.map(({ acessos }) => Number(acessos)).reduce((a, b) => a + b))\r\n      setGraph(graphData)\r\n    }\r\n  }, [data])\r\n\r\n  return (\r\n    <section className={`${styles.graph} animeleft`}>\r\n      <div className={`${styles.total} ${styles.graphItem}`}>\r\n        <p>Acessos: {total}</p>\r\n      </div>\r\n      <div className={styles.graphItem}>\r\n        <VictoryPie\r\n          data={graph}\r\n          innerRadius={50}\r\n          padding={{ top: 20, bottom: 20, left: 80, right: 80 }}\r\n          style={{\r\n            data: {\r\n              fillOpacity: 0.9,\r\n              stroke: '#fff',\r\n              strokeWidth: 2,\r\n            },\r\n            labels: {\r\n              fontSize: 14,\r\n              fill: '#333',\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={styles.graphItem}>\r\n        <VictoryChart>\r\n          <VictoryBar alignment=\"start\" data={graph}></VictoryBar>\r\n        </VictoryChart>\r\n      </div>\r\n    </section>\r\n  )\r\n}"],"sourceRoot":""}